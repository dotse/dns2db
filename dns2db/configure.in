#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.59)
AC_INIT(dns2db, 0.2_BETA, calle@autonomica.se)
AC_CONFIG_SRCDIR([dns2db.h])
#AC_CONFIG_HEADER([config.h])

# Set this to where ever libDNSLog is located
# MacOSx do not seem to like this so removed
#LDFLAGS="$LDFLAGS -L ../libDNSLog"
#CFLAGS="$CFLAGS -I ../libDNSLog"

# Checks for programs.
AC_PROG_CC

# Checks for libraries.

AC_CHECK_LIB([pcap], [pcap_open_offline])
AC_CHECK_LIB([sqlite3], [sqlite3_close])
AC_CHECK_LIB([DNSLog], [DNSLog_open])
AC_CHECK_LIB([ldns], [ldns_wire2pkt])


# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([arpa/inet.h netinet/udp.h netinet/in.h stdlib.h string.h sys/socket.h sys/time.h syslog.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_OFF_T
AC_TYPE_SIZE_T
AC_HEADER_TIME

# Checks for library functions.
AC_FUNC_MALLOC
AC_FUNC_STAT
AC_CHECK_FUNCS([inet_ntoa memset regcomp strchr strdup strndup])




# This is a funny one
# check if udphdr is either source/dest or
# uh_sport/uh_dport


AC_COMPILE_IFELSE([
	#include <stdlib.h>
	#include <inttypes.h>
	#include <netinet/udp.h>

	
	int main(int argc,char *argv[])
	{
		struct udphdr *udp = malloc(sizeof(struct udphdr));	   
		udp->source = 1;
		udp->dest = 1;
		free(udp);
		return 1;
	}
	],
	[AC_MSG_RESULT([checking udp header source.. yes])]
	[AC_DEFINE([HAVE_UDP_HEADER_SOURCE])]
	
	,[AC_MSG_RESULT([checking udp header source.. no])])]


AC_CONFIG_HEADERS([dns2db_config.h])
AC_CONFIG_FILES([Makefile])

AC_OUTPUT
